install.packages("ggplot2")
ggplot2
?ggplot2
??ggplot2
medianStepsPerDay<median(stepsPerDay$steps, na.rm = FALSE)
cls
clear
clr
?round
?mean
activityData<-read.csv("activity.csv")
setwd("~/GitHub/RepData_PeerAssessment1")
activityData<-read.csv("activity.csv")
?max
stepsPerInterval<-aggregate(steps ~ interval, data = activityData, mean)
max(stepsPerInterval)
max(stepsPerInterval$steps)
stepsPerInterval[max(stepsPerInterval$steps),]
stepsPerInterval[max(stepsPerInterval$steps),interval]
stepsPerInterval[max(stepsPerInterval$steps),c(interval)]
stepsPerInterval[max(stepsPerInterval$steps),"interval"]
stepsPerInterval[max(stepsPerInterval$steps),c("interval")]
stepsPerInterval[which.max(stepsPerInterval$steps),c("interval")]
which.max(stepsPerInterval$steps)
?which.max
stepsPerInterval[which.max(stepsPerInterval$steps),"interval"]
summary(activityData)
?summary
activityDataIsNA<-is.na(activityData)
View(activityDataIsNA)
imputedActivityData$steps[activityDataIsNA]
a
imputedActivityData<-activityData
imputedActivityData$steps[activityDataIsNA]
View(activityDataIsNA)
activityDataIsNA<-is.na(activityData$steps)
stepsPerInterval[1]
stepsPerInterval[1,1]
stepsPerInterval$interval[1]
stepsPerInterval$interval[2]
stepsPerInterval$steps[1]
for (i in activityDataIsNA){
if(i){
imputedActivityData$steps[i]<-stepsPerInterval$steps[i]
}
}
stepsPerDayImputed<-aggregate(steps ~ date, data = imputedActivityData, sum)
activityDataIsNA
for (i in activityDataIsNA){
if(i == TRUE){
imputedActivityData$steps[i]<-stepsPerInterval$steps[i]
}
}
stepsPerDayImputed<-aggregate(steps ~ date, data = imputedActivityData, sum)
stepsPerDayImputed
imputedActivityData<-activityData
imputedActivityData$steps[1]
imputedActivityData$steps[345]
imputedActivityData$steps[945]
imputedActivityData$steps[2045]
imputedActivityData$steps[1]
imputedActivityData[1,1]
imputedActivityData[1,]
stepsPerInterval$steps[imputedActivityData$interval[1]]
stepsPerInterval$steps[as.numeric(imputedActivityData$interval[1])]
as.numeric(imputedActivityData$interval[1])
as.numeric(imputedActivityData$interval[2])
stepsPerInterval$steps[as.numeric(imputedActivityData$interval[1])]
stepsPerInterval$steps[as.numeric(imputedActivityData$interval[2])]
stepsPerInterval$steps[as.numeric(imputedActivityData$interval[3])]
?as.numeric
is.numeric(imputedActivityData$interval[3])
imputedActivityData$interval[232]
imputedActivityData$interval[2000]
imputedActivityData$interval[20099]
imputedActivityData$interval[565]
2300/5
stepsPerInterval
2355/5
imputedActivityData$interval[3]/5
imputedActivityData$interval[0]/5
imputedActivityData$interval[2]/5
imputedActivityData$interval[10]/5
imputedActivityData$interval[288]/5
stepsPerInterval
24*60
1440/5
(imputedActivityData$interval[0])
(imputedActivityData$interval[0]/5)
counter = 0
for (i in activityDataIsNA){
if(i == TRUE){
imputedActivityData$steps[counter]<-stepsPerInterval$steps[as.numeric(imputedActivityData$interval[counter])/5]
}
counter<-counter+1
}
counter = 0
for (i in activityDataIsNA){
if(i == TRUE){
imputedActivityData$steps[counter]<-stepsPerInterval$steps[as.numeric(imputedActivityData$interval[1])/5]
}
counter<-counter+1
}
counter = 0
for (i in activityDataIsNA){
if(i == TRUE){
imputedActivityData$steps[counter]<-stepsPerInterval$steps[as.numeric(imputedActivityData$interval[1])]
}
counter<-counter+1
}
counter = 0
for (i in activityDataIsNA){
if(i == TRUE){
imputedActivityData$steps[counter]<-stepsPerInterval$steps[imputedActivityData$interval[234])]
}
counter<-counter+1
}
?weekday
?weekdays
weekdays(imputedActivityData$date[1])
weekdays(as.date(imputedActivityData$date[1]))
as.date
weekdays(as.Date(imputedActivityData$date[1]))
?match
day<-weekdays(as.Date(imputedActivityData$date[1]))
if(match(day, c("Sunday","Saturday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
match(day, c("Sunday"))
day
day<-weekdays(as.Date(imputedActivityData$date[8]))
day
day<-weekdays(as.Date(imputedActivityData$date[289]))
day
day<-weekdays(as.Date(imputedActivityData$date[2034]))
day
day<-weekdays(as.Date(imputedActivityData$date[1999]))
day
match(day,c("Saturday","Sunday"))
match(day,c("Saturday","Sunday"))
match(day,c("Sunday"))
dateCounter<-1
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
} else {
dayType<-"Weekday"
}
imputedActivityData$dayType<-as.factor(dayType)
dateCounter<-dateCounter + 1
}
imputedActivity$dayType
imputedActivityData$dayType
?if
dateCounter<-1
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
} else {
dayType<-"Weekday"
}
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
dateCounter<-dateCounter + 1
}
warnings()
?as.factor
day<-weekdays(as.Date(imputedActivityData$date[1]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
} else {
dayType<-"Weekday"
}
dayType
day<-weekdays(as.Date(imputedActivityData$date[1999]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
} else {
dayType<-"Weekday"
}
dayType
imputedActivityData$dayType[1]
imputedActivityData$dayType[1999]
day<-weekdays(as.Date(imputedActivityData$date[1999]))
day
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
dayType
imputedActivityData$dayType[1999]<-as.factor(dayType)
imputedActivityData$dayType<-as.factor(dayType)
imputedActivityData$dayType[1999]
?factor
imputedActivityData$dayType<-factor(dayType)
imputedActivityData$dayType
imputedActivityData$dayType[0]
imputedActivityData$dayType[1]
dateCounter<-1
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
dateCounter<-dateCounter + 1
}
dateCounter<-1
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
if(j){
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
}
dateCounter<-dateCounter + 1
}
warnings()
dateCounter<-1
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
imputedActivityData$dayType[dateCounter]<-dayType
imputedActivityData$dayType<-factor(imputedActivityData$dayType)
dateCounter<-dateCounter + 1
}
warnings()
levels(imputedActivityData$dayType)
is.factor(imputedActivityData$dayType[1999])
dateCounter<-1
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
dateCounter<-dateCounter + 1
}
?levels
levels(imputedActivityData$date)<-c("Weekend","Weekday")
levels(imputedActivityData$date)
levels(imputedActivityData$dayType)<-c("Weekend","Weekday")
levels(imputedActivityData$dayType)
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
dateCounter<-dateCounter + 1
}
imputedActivityData$dayType<- factor(ifelse(as.integer(format(imputedActivityData$date, format = '%u')) %in% c(1:5),
'weekday', 'weekend'))
levels(imputedActivityData$dayType)
imputedActivityData
imputedActivityData$dayType<- factor(ifelse(as.integer(format(imputedActivityData$date, format = '%u')) %in% c(1:5),
'weekday', 'weekend'))
head(imputedActivityData$dayType)
imputedActivityData$dayType<- factor(ifelse(as.integer(format(imputedActivityData$date, format = '%u')) %in% c(1:5),
'weekday', 'weekday'))
if (weekdays(as.Date(imputedActivityData$date[1])) %in% c("Saturday", "Sunday")) {
dayType<-"weekend"
} else {
dayType<-"weekday"
}
dayType
if (weekdays(as.Date(imputedActivityData$date[1999])) %in% c("Saturday", "Sunday")) {
dayType<-"weekend"
} else {
dayType<-"weekday"
}
dayType
dateCounter<-1
dateounter
dateCounter
if (weekdays(as.Date(imputedActivityData$date[dateCounter])) %in% c("Saturday", "Sunday")) {
dayType<-"weekend"
} else {
dayType<-"weekday"
}
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
dateCounter<-dateCounter + 1
dayType
if (weekdays(as.Date(imputedActivityData$date[1999])) %in% c("Saturday", "Sunday")) {
dayType<-"weekend"
} else {
dayType<-"weekday"
}
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
dateCounter<-dateCounter + 1
if (weekdays(as.Date(imputedActivityData$date[1999])) %in% c("Saturday", "Sunday")) {
dayType<-"weekend"
} else {
dayType<-"weekday"
}
imputedActivityData$dayType[1999]<-as.factor(dayType)
dateCounter<-dateCounter + 1
imputedActivityData$dayType<-factor(ifelse(imputedActivityData$date %in% c("Saturday","Sunday"),'weekend', 'weekday'))
imputedActivityData$dayType
imputedActivityData$dayType<-NULL
imputedActivityData$dayType<-factor(ifelse(imputedActivityData$date %in% c("Saturday","Sunday"),'weekend', 'weekday'))
imputedActivityData$dayType<-NULL
daytype <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
imputedActivityData$dayType <- as.factor(sapply(imputedActivityData$date, daytype))
imputedActivityData$dayType
stepsPerIntervalImputed<-aggregate(steps ~ interval, data = imputedActivityData, mean)
?aggregate
stepsPerIntervalImputed<-aggregate(steps ~ interval + dayType, data = imputedActivityData, mean)
dateCounter<-1
for (j in activityDataIsNA){
day<-as.character(weekdays(as.Date(imputedActivityData$date[dateCounter])))
if(day %in% c("Saturday","Sunday")){
dayType<-"Weekend"
}else{
dayType<-"Weekday"
}
imputedActivityData$dayType[dateCounter]<-as.factor(dayType)
dateCounter<-dateCounter + 1
}
day<-weekdays(as.Date(imputedActivityData$date[1])
)
day
if(day %in% c("Saturday","Sunday")){
dayTypeList[j]<-"Weekend"
}else{
dayTypeList[j]<-"Weekday"
}
dayTypeList<-NULL
if(day %in% c("Saturday","Sunday")){
dayTypeList[j]<-"Weekend"
}else{
dayTypeList[j]<-"Weekday"
}
day
is.character(day)
is.factor(day)
?factors
?factor
View(imputedActivityData)
View(imputedActivityData)
?as.factor
dateCounter<-1
dayTypeList<-NULL
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList[j]<-"weekend"
}else{
dayTypeList[j]<-"weekday"
}
imputedActivityData$dayType<-as.factor(dayTypeList)
dateCounter<-dateCounter + 1
}
dateCounter<-1
dayTypeList<-list()
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList[j]<-"weekend"
}else{
dayTypeList[j]<-"weekday"
}
imputedActivityData$dayType<-as.factor(dayTypeList)
dateCounter<-dateCounter + 1
}
day<-weekdays(imputedActivityData$date[dateCounter])
day<-weekdays(as.date(imputedActivityData$date[dateCounter]))
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
day
is.character(day)
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList[j]<-"weekend"
}else{
dayTypeList[j]<-"weekday"
}
imputedActivityData$dayType<-as.factor(dayTypeList)
dateCounter<-dateCounter + 1
}
dayTypeList<-list()
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList[j]<-"weekend"
}else{
dayTypeList[j]<-"weekday"
}
#imputedActivityData$dayType<-as.factor(dayTypeList)
dateCounter<-dateCounter + 1
}
dayTypeList[1]
dayTypeList[,1]
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList[[j]<-"weekend"
}else{
dayTypeList[[j]]<-"weekday"
}
#imputedActivityData$dayType<-as.factor(dayTypeList)
dateCounter<-dateCounter + 1
}
dateCounter<-1
dayTypeList<-list()
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList[[j]]<-"weekend"
}else{
dayTypeList[[j]]<-"weekday"
}
#imputedActivityData$dayType<-as.factor(dayTypeList)
dateCounter<-dateCounter + 1
}
dateCounter<-1
dayTypeList<-NULL
dayTypeList<-list()
dayTypeList[[1]]<-1
dayTypeList[[1]]
dayTypeList[[2]]<-"test"
dayTypeList[[2]]
dateCounter<-1
dayTypeList<-NULL
dayTypeList<-list()
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList[[j]]<-"weekend"
}else{
dayTypeList[[j]]<-"weekday"
}
#imputedActivityData$dayType<-as.factor(dayTypeList)
dateCounter<-dateCounter + 1
}
dayTypeList<-list("weekend","weekday")
imputedActivityData$dayType<-as.factor(dayTypeList)
imputedActivityData$dayType<-factor(dayTypeList)
dayTypeList
dayTypeList<-c("weekend","weekday")
imputedActivityData$dayType<-factor(dayTypeList)
?c
for (j in activityDataIsNA){
day<-weekdays(as.Date(imputedActivityData$date[dateCounter]))
if(day %in% c("Saturday","Sunday")){
dayTypeList<-c(dayTypeList,"weekend")
}else{
dayTypeList<-c(dayTypeList,"weekday")
}
dateCounter<-dateCounter + 1
}
dayTypeList
imputedActivityData$dayType<-factor(dayTypeList)
summary(dayTypeList)
summary(imputedActivityData)
